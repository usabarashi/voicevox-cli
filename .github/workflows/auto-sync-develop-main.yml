name: Auto Sync Develop to Main

on:
  push:
    branches:
      - develop

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: auto-sync-develop-main
  cancel-in-progress: false

jobs:
  create-sync-pr:
    name: Create or Update Sync PR
    runs-on: ubuntu-latest
    steps:
      - name: Create or update PR from develop to main
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const base = 'main';
            const head = 'develop';
            const { owner, repo } = context.repo;

            const compare = await github.rest.repos.compareCommitsWithBasehead({
              owner,
              repo,
              base,
              head
            });

            if (!compare.data.commits.length) {
              core.info('No new commits between develop and main; skipping PR update.');
              return;
            }

            const prMap = new Map();

            for (const commit of compare.data.commits) {
              const associated = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner,
                repo,
                commit_sha: commit.sha
              });

              for (const pr of associated.data) {
                if (pr.base.ref === head && pr.merged_at) {
                  if (!prMap.has(pr.number)) {
                    prMap.set(pr.number, {
                      number: pr.number,
                      title: pr.title,
                      url: pr.html_url,
                      merged_at: pr.merged_at
                    });
                  }
                }
              }
            }

            const mergedPrs = Array.from(prMap.values())
              .sort((a, b) => a.merged_at.localeCompare(b.merged_at));

            const lines = mergedPrs.length
              ? mergedPrs.map(pr => `- [#${pr.number}](${pr.url}) ${pr.title} (merged ${pr.merged_at.slice(0, 10)})`)
              : ['- No merged pull requests found between develop and main.'];

            const title = `Sync develop into main (${new Date().toISOString().slice(0, 10)})`;
            const body = [
              '## Summary',
              '',
              'This PR syncs the latest changes from `develop` into `main`.',
              '',
              '## Merged PRs into develop',
              '',
              ...lines,
              '',
              '_Generated automatically by auto-sync workflow._'
            ].join('\n');

            const existing = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:${head}`,
              base
            });

            if (existing.data.length) {
              const current = existing.data[0];
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: current.number,
                title,
                body
              });
              core.info(`Updated existing PR #${current.number}`);
            } else {
              const created = await github.rest.pulls.create({
                owner,
                repo,
                head,
                base,
                title,
                body
              });
              core.info(`Created PR #${created.data.number}`);
            }
