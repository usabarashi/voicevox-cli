name: Auto Release on Main

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  auto-tag-and-release:
    name: Auto Tag and Release
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create timestamp tag
        id: create_tag
        run: |
          # Generate timestamp-based tag (vYYYYMMDDHHMMSS)
          TIMESTAMP=$(date -u +"%Y%m%d%H%M%S")
          TAG_NAME="v${TIMESTAMP}"

          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_OUTPUT
          echo "Creating tag: ${TAG_NAME}"

          # Check if tag already exists
          if git rev-parse "${TAG_NAME}" >/dev/null 2>&1; then
            echo "::notice::Tag ${TAG_NAME} already exists, skipping release creation"
            echo "SKIP_RELEASE=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Create and push tag
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${TAG_NAME}" -m "Auto release ${TAG_NAME}"
          git push origin "${TAG_NAME}"

      - name: Install Nix
        uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v31

      - name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          name: voicevox-cli
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build release artifacts
        run: |
          VERSION=${{ steps.create_tag.outputs.TAG_NAME }}
          ARCHIVE_NAME="voicevox-cli-${VERSION}-aarch64-darwin.tar.gz"

          # Build with Nix
          nix build --show-trace

          # Create tarball from build result
          tar -czf "${ARCHIVE_NAME}" -C result/bin .

          # Calculate hash
          shasum -a 256 "${ARCHIVE_NAME}" > "${ARCHIVE_NAME}.sha256"

          # Verify artifacts exist
          if [ ! -f "${ARCHIVE_NAME}" ]; then
            echo "Build artifact not found!"
            exit 1
          fi

          echo "ARCHIVE_NAME=${ARCHIVE_NAME}" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_tag.outputs.TAG_NAME }}
          name: VOICEVOX CLI ${{ steps.create_tag.outputs.TAG_NAME }}
          body: |
            ## VOICEVOX CLI Release ${{ steps.create_tag.outputs.TAG_NAME }}

            ### Download
            - **macOS (Apple Silicon)**: `voicevox-cli-${{ steps.create_tag.outputs.TAG_NAME }}-aarch64-darwin.tar.gz`

            ### Installation
            ```bash
            tar -xzf voicevox-cli-${{ steps.create_tag.outputs.TAG_NAME }}-aarch64-darwin.tar.gz
            ./voicevox-say "こんにちは"
            ```

            ### Verification
            ```bash
            # Verify checksum
            shasum -a 256 -c voicevox-cli-${{ steps.create_tag.outputs.TAG_NAME }}-aarch64-darwin.tar.gz.sha256
            ```
            
            ### Release Information
            - **Build Time**: ${{ steps.create_tag.outputs.TAG_NAME }}
            - **Commit**: ${{ github.sha }}
            - **Branch**: main
          draft: false
          prerelease: false
          files: |
            voicevox-cli-*.tar.gz
            voicevox-cli-*.tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
