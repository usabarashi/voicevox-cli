[package]
name = "voicevox-cli"
version = "0.1.0"
edition = "2021"
authors = ["usabarashi"]
description = "VOICEVOX CLI tool for text-to-speech synthesis"
license = "MIT OR Apache-2.0"
repository = "https://github.com/usabarashi/voicevox-cli"

[[bin]]
name = "voicevox-say"
path = "src/bin/client.rs"

[[bin]]
name = "voicevox-daemon"
path = "src/bin/daemon.rs"

[[bin]]
name = "voicevox-mcp-server"
path = "src/bin/mcp_server.rs"

[lib]
name = "voicevox_cli"
path = "src/lib.rs"

[dependencies]
anyhow = "1.0"
thiserror = "1.0"
clap = { version = "4.5", features = ["derive", "env", "unicode", "wrap_help"] }

serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
bincode = { version = "2.0", features = ["serde"] }
bytes = "1.5"
lazy_static = "1.4"
tempfile = "3.8"
memmap2 = "0.9"
toml = "0.9"
dirs = "5.0"

# MCP Server dependencies
jsonrpc-lite = "0.6"
serde_bytes = "0.11"

[target.'cfg(unix)'.dependencies]
nix = { version = "0.30", features = ["signal", "socket", "uio", "fs"] }

rodio = { version = "0.21", features = ["wav", "symphonia-all"] }

tokio = { version = "1.47", features = ["full", "tracing"] }
tokio-util = { version = "0.7", features = ["codec", "io-util"] }
futures-util = { version = "0.3", features = ["sink", "io"] }

voicevox_core = { git = "https://github.com/VOICEVOX/voicevox_core.git", tag = "0.16.0", features = ["link-onnxruntime"], default-features = false }

libc = "0.2"

rayon = { version = "1.11", optional = true }
smallvec = { version = "1.13", features = ["serde"], optional = true }
compact_str = { version = "0.9", features = ["serde"], optional = true }
mimalloc = { version = "0.1", default-features = false, optional = true }

[features]
default = []
simd = ["rayon"]
fast-strings = ["compact_str"]
small-vectors = ["smallvec"]
performance = ["simd", "fast-strings", "small-vectors", "mimalloc"]

[profile.release]
lto = "fat"
codegen-units = 1
panic = "abort"
opt-level = 3
overflow-checks = false
debug = false
strip = true
incremental = false

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true
incremental = true

[profile.bench]
inherits = "release"
debug = true
strip = false

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(openjtalk_dict_path)'] }
